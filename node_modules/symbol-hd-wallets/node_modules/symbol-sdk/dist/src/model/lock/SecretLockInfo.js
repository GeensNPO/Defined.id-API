"use strict";
/*
 * Copyright 2020 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License"),
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Secret lock information
 */
class SecretLockInfo {
    constructor(
    /**
     * The stored database id.
     */
    recordId, 
    /**
     * Owner's address.
     */
    ownerAddress, 
    /**
     * Locked moasic id.
     */
    mosaicId, 
    /**
     * Locked fund amount.
     */
    amount, 
    /**
     * Block height of the lock expires.
     */
    endHeight, 
    /**
     * Current lock status.
     */
    status, 
    /**
     * The lock hash algorithm.
     */
    hashAlgorithm, 
    /**
     * The lock secret.
     */
    secret, 
    /**
     * The recipient's address.
     */
    recipientAddress, 
    /**
     * The composite hash.
     */
    compositeHash) {
        this.recordId = recordId;
        this.ownerAddress = ownerAddress;
        this.mosaicId = mosaicId;
        this.amount = amount;
        this.endHeight = endHeight;
        this.status = status;
        this.hashAlgorithm = hashAlgorithm;
        this.secret = secret;
        this.recipientAddress = recipientAddress;
        this.compositeHash = compositeHash;
    }
}
exports.SecretLockInfo = SecretLockInfo;
//# sourceMappingURL=SecretLockInfo.js.map