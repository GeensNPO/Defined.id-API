/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MultisigDTO
 */
export interface MultisigDTO {
    /**
     * Address expressed in hexadecimal base.
     * @type {string}
     * @memberof MultisigDTO
     */
    accountAddress: string;
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof MultisigDTO
     */
    minApproval: number;
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof MultisigDTO
     */
    minRemoval: number;
    /**
     * Addresses of the cosignatory accounts.
     * @type {Array<string>}
     * @memberof MultisigDTO
     */
    cosignatoryAddresses: Array<string>;
    /**
     * Multisig accounts where the account is cosignatory.
     * @type {Array<string>}
     * @memberof MultisigDTO
     */
    multisigAddresses: Array<string>;
}

export function MultisigDTOFromJSON(json: any): MultisigDTO {
    return MultisigDTOFromJSONTyped(json, false);
}

export function MultisigDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultisigDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountAddress': json['accountAddress'],
        'minApproval': json['minApproval'],
        'minRemoval': json['minRemoval'],
        'cosignatoryAddresses': json['cosignatoryAddresses'],
        'multisigAddresses': json['multisigAddresses'],
    };
}

export function MultisigDTOToJSON(value?: MultisigDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountAddress': value.accountAddress,
        'minApproval': value.minApproval,
        'minRemoval': value.minRemoval,
        'cosignatoryAddresses': value.cosignatoryAddresses,
        'multisigAddresses': value.multisigAddresses,
    };
}


