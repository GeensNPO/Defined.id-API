/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BlockDTO,
    BlockDTOFromJSON,
    BlockDTOFromJSONTyped,
    BlockDTOToJSON,
    BlockMetaDTO,
    BlockMetaDTOFromJSON,
    BlockMetaDTOFromJSONTyped,
    BlockMetaDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface BlockInfoDTO
 */
export interface BlockInfoDTO {
    /**
     * Internal resource identifier.
     * @type {string}
     * @memberof BlockInfoDTO
     */
    id: string;
    /**
     * 
     * @type {BlockMetaDTO}
     * @memberof BlockInfoDTO
     */
    meta: BlockMetaDTO;
    /**
     * 
     * @type {BlockDTO}
     * @memberof BlockInfoDTO
     */
    block: BlockDTO;
}

export function BlockInfoDTOFromJSON(json: any): BlockInfoDTO {
    return BlockInfoDTOFromJSONTyped(json, false);
}

export function BlockInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockInfoDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'meta': json['meta'],
        'block': json['block'],
    };
}

export function BlockInfoDTOToJSON(value?: BlockInfoDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'meta': value.meta,
        'block': value.block,
    };
}


