/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Supplementary data stored for importance recalculation.
 * At each importance recalculation, existing buckets are shifted, the working bucket is finalized and a new working bucketis created.
 * Each bucket influences at most five importance recalculations.
 * @export
 * @interface ActivityBucketDTO
 */
export interface ActivityBucketDTO {
    /**
     * Height of the blockchain.
     * @type {string}
     * @memberof ActivityBucketDTO
     */
    startHeight: string;
    /**
     * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
     * @type {string}
     * @memberof ActivityBucketDTO
     */
    totalFeesPaid: string;
    /**
     * A number that allows uint 32 values.
     * @type {number}
     * @memberof ActivityBucketDTO
     */
    beneficiaryCount: number;
    /**
     * Probability of an account to harvest the next block.
     * @type {string}
     * @memberof ActivityBucketDTO
     */
    rawScore: string;
}

export function ActivityBucketDTOFromJSON(json: any): ActivityBucketDTO {
    return ActivityBucketDTOFromJSONTyped(json, false);
}

export function ActivityBucketDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityBucketDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startHeight': json['startHeight'],
        'totalFeesPaid': json['totalFeesPaid'],
        'beneficiaryCount': json['beneficiaryCount'],
        'rawScore': json['rawScore'],
    };
}

export function ActivityBucketDTOToJSON(value?: ActivityBucketDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startHeight': value.startHeight,
        'totalFeesPaid': value.totalFeesPaid,
        'beneficiaryCount': value.beneficiaryCount,
        'rawScore': value.rawScore,
    };
}


