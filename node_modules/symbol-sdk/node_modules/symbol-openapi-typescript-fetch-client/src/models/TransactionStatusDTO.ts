/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TransactionGroupEnum,
    TransactionGroupEnumFromJSON,
    TransactionGroupEnumFromJSONTyped,
    TransactionGroupEnumToJSON,
    TransactionStatusEnum,
    TransactionStatusEnumFromJSON,
    TransactionStatusEnumFromJSONTyped,
    TransactionStatusEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface TransactionStatusDTO
 */
export interface TransactionStatusDTO {
    /**
     * 
     * @type {TransactionGroupEnum}
     * @memberof TransactionStatusDTO
     */
    group: TransactionGroupEnum;
    /**
     * 
     * @type {TransactionStatusEnum}
     * @memberof TransactionStatusDTO
     */
    code?: TransactionStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof TransactionStatusDTO
     */
    hash: string;
    /**
     * Duration expressed in number of blocks.
     * @type {string}
     * @memberof TransactionStatusDTO
     */
    deadline: string;
    /**
     * Height of the blockchain.
     * @type {string}
     * @memberof TransactionStatusDTO
     */
    height?: string;
}

export function TransactionStatusDTOFromJSON(json: any): TransactionStatusDTO {
    return TransactionStatusDTOFromJSONTyped(json, false);
}

export function TransactionStatusDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionStatusDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'group': json['group'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'hash': json['hash'],
        'deadline': json['deadline'],
        'height': !exists(json, 'height') ? undefined : json['height'],
    };
}

export function TransactionStatusDTOToJSON(value?: TransactionStatusDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'group': value.group,
        'code': value.code,
        'hash': value.hash,
        'deadline': value.deadline,
        'height': value.height,
    };
}


