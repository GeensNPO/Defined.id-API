"use strict";
/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LockHashAlgorithmEnumToJSON = exports.LockHashAlgorithmEnumFromJSONTyped = exports.LockHashAlgorithmEnumFromJSON = exports.LockHashAlgorithmEnum = void 0;
/**
 * Algorithm used to hash the proof:
 * * 0 (Op_Sha3_256) - Proof is hashed using SHA3-256.
 * * 1 (Op_Hash_160) - Proof is hashed twice: first with SHA-256 and then with RIPEMD-160 (bitcoin's OP_HASH160).
 * * 2 (Op_Hash_256) - Proof is hashed twice with SHA3-256 (bitcoin's OP_HASH256).
 * @export
 * @enum {string}
 */
var LockHashAlgorithmEnum;
(function (LockHashAlgorithmEnum) {
    LockHashAlgorithmEnum[LockHashAlgorithmEnum["NUMBER_0"] = 0] = "NUMBER_0";
    LockHashAlgorithmEnum[LockHashAlgorithmEnum["NUMBER_1"] = 1] = "NUMBER_1";
    LockHashAlgorithmEnum[LockHashAlgorithmEnum["NUMBER_2"] = 2] = "NUMBER_2";
})(LockHashAlgorithmEnum = exports.LockHashAlgorithmEnum || (exports.LockHashAlgorithmEnum = {}));
function LockHashAlgorithmEnumFromJSON(json) {
    return LockHashAlgorithmEnumFromJSONTyped(json, false);
}
exports.LockHashAlgorithmEnumFromJSON = LockHashAlgorithmEnumFromJSON;
function LockHashAlgorithmEnumFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.LockHashAlgorithmEnumFromJSONTyped = LockHashAlgorithmEnumFromJSONTyped;
function LockHashAlgorithmEnumToJSON(value) {
    return value;
}
exports.LockHashAlgorithmEnumToJSON = LockHashAlgorithmEnumToJSON;
