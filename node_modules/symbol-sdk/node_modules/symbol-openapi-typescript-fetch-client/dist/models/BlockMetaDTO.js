"use strict";
/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockMetaDTOToJSON = exports.BlockMetaDTOFromJSONTyped = exports.BlockMetaDTOFromJSON = void 0;
const runtime_1 = require("../runtime");
function BlockMetaDTOFromJSON(json) {
    return BlockMetaDTOFromJSONTyped(json, false);
}
exports.BlockMetaDTOFromJSON = BlockMetaDTOFromJSON;
function BlockMetaDTOFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hash': json['hash'],
        'totalFee': json['totalFee'],
        'generationHash': json['generationHash'],
        'stateHashSubCacheMerkleRoots': json['stateHashSubCacheMerkleRoots'],
        'numTransactions': json['numTransactions'],
        'numStatements': !runtime_1.exists(json, 'numStatements') ? undefined : json['numStatements'],
    };
}
exports.BlockMetaDTOFromJSONTyped = BlockMetaDTOFromJSONTyped;
function BlockMetaDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hash': value.hash,
        'totalFee': value.totalFee,
        'generationHash': value.generationHash,
        'stateHashSubCacheMerkleRoots': value.stateHashSubCacheMerkleRoots,
        'numTransactions': value.numTransactions,
        'numStatements': value.numStatements,
    };
}
exports.BlockMetaDTOToJSON = BlockMetaDTOToJSON;
