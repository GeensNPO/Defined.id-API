"use strict";
/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.2.0
 *
 * The version of the OpenAPI document: 0.9.6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NamespaceDTOToJSON = exports.NamespaceDTOFromJSONTyped = exports.NamespaceDTOFromJSON = void 0;
const runtime_1 = require("../runtime");
function NamespaceDTOFromJSON(json) {
    return NamespaceDTOFromJSONTyped(json, false);
}
exports.NamespaceDTOFromJSON = NamespaceDTOFromJSON;
function NamespaceDTOFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'registrationType': json['registrationType'],
        'depth': json['depth'],
        'level0': json['level0'],
        'level1': !runtime_1.exists(json, 'level1') ? undefined : json['level1'],
        'level2': !runtime_1.exists(json, 'level2') ? undefined : json['level2'],
        'alias': json['alias'],
        'parentId': json['parentId'],
        'ownerAddress': json['ownerAddress'],
        'startHeight': json['startHeight'],
        'endHeight': json['endHeight'],
    };
}
exports.NamespaceDTOFromJSONTyped = NamespaceDTOFromJSONTyped;
function NamespaceDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'registrationType': value.registrationType,
        'depth': value.depth,
        'level0': value.level0,
        'level1': value.level1,
        'level2': value.level2,
        'alias': value.alias,
        'parentId': value.parentId,
        'ownerAddress': value.ownerAddress,
        'startHeight': value.startHeight,
        'endHeight': value.endHeight,
    };
}
exports.NamespaceDTOToJSON = NamespaceDTOToJSON;
