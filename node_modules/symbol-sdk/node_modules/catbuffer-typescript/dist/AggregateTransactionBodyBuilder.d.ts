import { CosignatureBuilder } from './CosignatureBuilder';
import { EmbeddedTransactionBuilder } from './EmbeddedTransactionBuilder';
import { Hash256Dto } from './Hash256Dto';
export declare class AggregateTransactionBodyBuilder {
    transactionsHash: Hash256Dto;
    aggregateTransactionHeader_Reserved1: number;
    transactions: EmbeddedTransactionBuilder[];
    cosignatures: CosignatureBuilder[];
    constructor(transactionsHash: Hash256Dto, transactions: EmbeddedTransactionBuilder[], cosignatures: CosignatureBuilder[]);
    static loadFromBinary(payload: Uint8Array): AggregateTransactionBodyBuilder;
    getTransactionsHash(): Hash256Dto;
    getAggregateTransactionHeader_Reserved1(): number;
    getTransactions(): EmbeddedTransactionBuilder[];
    getCosignatures(): CosignatureBuilder[];
    getSize(): number;
    serialize(): Uint8Array;
}
