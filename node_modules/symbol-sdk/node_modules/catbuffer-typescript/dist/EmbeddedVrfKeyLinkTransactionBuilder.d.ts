import { EmbeddedTransactionBuilder } from './EmbeddedTransactionBuilder';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { LinkActionDto } from './LinkActionDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { VrfKeyLinkTransactionBodyBuilder } from './VrfKeyLinkTransactionBodyBuilder';
export declare class EmbeddedVrfKeyLinkTransactionBuilder extends EmbeddedTransactionBuilder {
    vrfKeyLinkTransactionBody: VrfKeyLinkTransactionBodyBuilder;
    constructor(signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, linkedPublicKey: KeyDto, linkAction: LinkActionDto);
    static loadFromBinary(payload: Uint8Array): EmbeddedVrfKeyLinkTransactionBuilder;
    getLinkedPublicKey(): KeyDto;
    getLinkAction(): LinkActionDto;
    getSize(): number;
    serialize(): Uint8Array;
}
