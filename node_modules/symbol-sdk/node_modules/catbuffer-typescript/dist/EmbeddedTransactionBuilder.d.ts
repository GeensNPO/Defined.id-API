import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { NetworkTypeDto } from './NetworkTypeDto';
export declare class EmbeddedTransactionBuilder {
    size: number;
    embeddedTransactionHeader_Reserved1: number;
    signerPublicKey: KeyDto;
    entityBody_Reserved1: number;
    version: number;
    network: NetworkTypeDto;
    type: EntityTypeDto;
    constructor(signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto);
    static loadFromBinary(payload: Uint8Array): EmbeddedTransactionBuilder;
    getEmbeddedTransactionHeader_Reserved1(): number;
    getSignerPublicKey(): KeyDto;
    getEntityBody_Reserved1(): number;
    getVersion(): number;
    getNetwork(): NetworkTypeDto;
    getType(): EntityTypeDto;
    getSize(): number;
    serialize(): Uint8Array;
}
