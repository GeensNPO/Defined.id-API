export declare class GeneratorUtils {
    static bufferToUint64(input: Uint8Array): number[];
    static readUint32At(bytes: Uint8Array, index: number): number;
    static uintToBuffer(uintValue: number, bufferSize: number): Uint8Array;
    static bufferToUint(buffer: Uint8Array): number;
    static uint64ToBuffer(uintValue: number[]): Uint8Array;
    static concatTypedArrays(array1: Uint8Array, array2: Uint8Array): Uint8Array;
    static uint8ToInt8: (input: number) => number;
    static getBytes(binary: Uint8Array, size: number): Uint8Array;
    static getTransactionPaddingSize(size: number, alignment: number): number;
    static compact(uint64: number[]): number | number[];
    static fromUint(number: number): number[];
}
