import { AddressDto } from './AddressDto';
import { NamespaceAliasTypeDto } from './NamespaceAliasTypeDto';
import { NamespaceIdDto } from './NamespaceIdDto';
import { NamespaceLifetimeBuilder } from './NamespaceLifetimeBuilder';
import { NamespacePathBuilder } from './NamespacePathBuilder';
export declare class RootNamespaceHistoryBuilder {
    id: NamespaceIdDto;
    ownerAddress: AddressDto;
    lifetime: NamespaceLifetimeBuilder;
    rootAlias: NamespaceAliasTypeDto;
    paths: NamespacePathBuilder[];
    constructor(id: NamespaceIdDto, ownerAddress: AddressDto, lifetime: NamespaceLifetimeBuilder, rootAlias: NamespaceAliasTypeDto, paths: NamespacePathBuilder[]);
    static loadFromBinary(payload: Uint8Array): RootNamespaceHistoryBuilder;
    getId(): NamespaceIdDto;
    getOwnerAddress(): AddressDto;
    getLifetime(): NamespaceLifetimeBuilder;
    getRootAlias(): NamespaceAliasTypeDto;
    getPaths(): NamespacePathBuilder[];
    getSize(): number;
    serialize(): Uint8Array;
}
