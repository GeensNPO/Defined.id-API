"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MosaicPropertiesBuilder = void 0;
const BlockDurationDto_1 = require("./BlockDurationDto");
const GeneratorUtils_1 = require("./GeneratorUtils");
class MosaicPropertiesBuilder {
    constructor(flags, divisibility, duration) {
        this.flags = flags;
        this.divisibility = divisibility;
        this.duration = duration;
    }
    static loadFromBinary(payload) {
        const byteArray = Array.from(payload);
        const flags = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        const divisibility = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        const duration = BlockDurationDto_1.BlockDurationDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, duration.getSize());
        return new MosaicPropertiesBuilder(flags, divisibility, duration);
    }
    getFlags() {
        return this.flags;
    }
    getDivisibility() {
        return this.divisibility;
    }
    getDuration() {
        return this.duration;
    }
    getSize() {
        let size = 0;
        size += 1;
        size += 1;
        size += this.duration.getSize();
        return size;
    }
    serialize() {
        let newArray = Uint8Array.from([]);
        const flagsBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getFlags(), 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, flagsBytes);
        const divisibilityBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getDivisibility(), 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, divisibilityBytes);
        const durationBytes = this.duration.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, durationBytes);
        return newArray;
    }
}
exports.MosaicPropertiesBuilder = MosaicPropertiesBuilder;
//# sourceMappingURL=MosaicPropertiesBuilder.js.map