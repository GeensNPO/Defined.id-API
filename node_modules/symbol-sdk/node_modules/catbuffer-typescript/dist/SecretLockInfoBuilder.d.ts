import { AddressDto } from './AddressDto';
import { Hash256Dto } from './Hash256Dto';
import { HeightDto } from './HeightDto';
import { LockHashAlgorithmDto } from './LockHashAlgorithmDto';
import { LockStatusDto } from './LockStatusDto';
import { MosaicBuilder } from './MosaicBuilder';
export declare class SecretLockInfoBuilder {
    ownerAddress: AddressDto;
    mosaic: MosaicBuilder;
    endHeight: HeightDto;
    status: LockStatusDto;
    hashAlgorithm: LockHashAlgorithmDto;
    secret: Hash256Dto;
    recipient: AddressDto;
    constructor(ownerAddress: AddressDto, mosaic: MosaicBuilder, endHeight: HeightDto, status: LockStatusDto, hashAlgorithm: LockHashAlgorithmDto, secret: Hash256Dto, recipient: AddressDto);
    static loadFromBinary(payload: Uint8Array): SecretLockInfoBuilder;
    getOwnerAddress(): AddressDto;
    getMosaic(): MosaicBuilder;
    getEndHeight(): HeightDto;
    getStatus(): LockStatusDto;
    getHashAlgorithm(): LockHashAlgorithmDto;
    getSecret(): Hash256Dto;
    getRecipient(): AddressDto;
    getSize(): number;
    serialize(): Uint8Array;
}
