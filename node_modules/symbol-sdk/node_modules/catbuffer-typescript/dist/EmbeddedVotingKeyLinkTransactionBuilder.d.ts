import { EmbeddedTransactionBuilder } from './EmbeddedTransactionBuilder';
import { EntityTypeDto } from './EntityTypeDto';
import { FinalizationPointDto } from './FinalizationPointDto';
import { KeyDto } from './KeyDto';
import { LinkActionDto } from './LinkActionDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { VotingKeyDto } from './VotingKeyDto';
import { VotingKeyLinkTransactionBodyBuilder } from './VotingKeyLinkTransactionBodyBuilder';
export declare class EmbeddedVotingKeyLinkTransactionBuilder extends EmbeddedTransactionBuilder {
    votingKeyLinkTransactionBody: VotingKeyLinkTransactionBodyBuilder;
    constructor(signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, linkedPublicKey: VotingKeyDto, startPoint: FinalizationPointDto, endPoint: FinalizationPointDto, linkAction: LinkActionDto);
    static loadFromBinary(payload: Uint8Array): EmbeddedVotingKeyLinkTransactionBuilder;
    getLinkedPublicKey(): VotingKeyDto;
    getStartPoint(): FinalizationPointDto;
    getEndPoint(): FinalizationPointDto;
    getLinkAction(): LinkActionDto;
    getSize(): number;
    serialize(): Uint8Array;
}
