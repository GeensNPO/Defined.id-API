import { AccountMetadataTransactionBodyBuilder } from './AccountMetadataTransactionBodyBuilder';
import { EmbeddedTransactionBuilder } from './EmbeddedTransactionBuilder';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { UnresolvedAddressDto } from './UnresolvedAddressDto';
export declare class EmbeddedAccountMetadataTransactionBuilder extends EmbeddedTransactionBuilder {
    accountMetadataTransactionBody: AccountMetadataTransactionBodyBuilder;
    constructor(signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, targetAddress: UnresolvedAddressDto, scopedMetadataKey: number[], valueSizeDelta: number, value: Uint8Array);
    static loadFromBinary(payload: Uint8Array): EmbeddedAccountMetadataTransactionBuilder;
    getTargetAddress(): UnresolvedAddressDto;
    getScopedMetadataKey(): number[];
    getValueSizeDelta(): number;
    getValue(): Uint8Array;
    getSize(): number;
    serialize(): Uint8Array;
}
