import { Observable } from 'rxjs';
import { Metadata } from '../model/metadata/Metadata';
import { Http } from './Http';
import { MetadataSearchCriteria } from './searchCriteria/MetadataSearchCriteria';
import { Page } from './Page';
import { MetadataRepository } from './MetadataRepository';
/**
 * Metadata http repository.
 *
 * @since 1.0
 */
export declare class MetadataHttp extends Http implements MetadataRepository {
    /**
     * Constructor
     * @param url Base catapult-rest url
     * @param fetchApi fetch function to be used when performing rest requests.
     */
    constructor(url: string, fetchApi?: any);
    /**
     * Gets an array of metadata.
     * @param criteria - Metadata search criteria
     * @returns Observable<Page<Metadata>>
     */
    search(criteria: MetadataSearchCriteria): Observable<Page<Metadata>>;
    /**
     * It maps MetadataDTO into a Metadata
     * @param metadata - the dto
     * @returns the model Metadata.
     */
    private toMetadata;
}
