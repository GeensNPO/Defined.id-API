import { NamespaceId } from '../namespace/NamespaceId';
import { UInt64 } from '../UInt64';
import { Mosaic } from './Mosaic';
/**
 * NetworkCurrencyLocal mosaic for local test network (local bootstrap server)
 *
 * This represents the per-network currency mosaic. This mosaicId is aliased
 * with namespace name `cat.currency`.
 *
 * @since 0.10.2
 */
export declare class NetworkCurrencyLocal extends Mosaic {
    /**
     * namespaceId of `currency` namespace.
     *
     * @type {Id}
     */
    static NAMESPACE_ID: NamespaceId;
    /**
     * Divisiblity
     * @type {number}
     */
    static DIVISIBILITY: number;
    /**
     * Initial supply
     * @type {number}
     */
    static INITIAL_SUPPLY: number;
    /**
     * Is tranferable
     * @type {boolean}
     */
    static TRANSFERABLE: boolean;
    /**
     * Is Supply mutable
     * @type {boolean}
     */
    static SUPPLY_MUTABLE: boolean;
    /**
     * constructor
     * @param owner
     * @param amount
     */
    private constructor();
    /**
     * Create NetworkCurrencyLocal with using NetworkCurrencyLocal as unit.
     *
     * @param amount
     * @returns {NetworkCurrencyLocal}
     */
    static createRelative(amount: UInt64 | number): NetworkCurrencyLocal;
    /**
     * Create NetworkCurrencyLocal with using micro NetworkCurrencyLocal as unit,
     * 1 NetworkCurrencyLocal = 1000000 micro NetworkCurrencyLocal.
     *
     * @param amount
     * @returns {NetworkCurrencyLocal}
     */
    static createAbsolute(amount: UInt64 | number): NetworkCurrencyLocal;
}
