import { NetworkType } from '../network/NetworkType';
import { Message } from './Message';
export declare class PersistentHarvestingDelegationMessage extends Message {
    constructor(payload: string);
    /**
     * @param signingPrivateKey - Remote harvester signing private key linked to the main account
     * @param vrfPrivateKey - VRF private key linked to the main account
     * @param nodePublicKey - Node certificate public key
     * @param {NetworkType} networkType - Catapult network type
     * @return {PersistentHarvestingDelegationMessage}
     */
    static create(signingPrivateKey: string, vrfPrivateKey: string, nodePublicKey: string, networkType: NetworkType): PersistentHarvestingDelegationMessage;
    /**
     * Create PersistentHarvestingDelegationMessage from DTO payload
     * @param payload
     */
    static createFromPayload(payload: string): PersistentHarvestingDelegationMessage;
    /**
     *
     * @param encryptMessage - Encrypted message to be decrypted
     * @param privateKey - Node certificate private key
     * @return {string}
     */
    static decrypt(encryptMessage: PersistentHarvestingDelegationMessage, privateKey: string): string;
}
