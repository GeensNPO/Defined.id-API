"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityService = void 0;
const hd_key_1 = require("../constants/hd-key");
const crypto = require('crypto');
const sha256 = require('js-sha256').sha256;
const base58 = require("base-58");
const base58check = require('base58check');
const ripemd160 = require('ripemd160');
var EC = require('elliptic').ec;
var encoderOptions = {
    curveParameters: [1, 3, 132, 0, 10],
    privatePEMOptions: { label: 'PRIVATE KEY' },
    publicPEMOptions: { label: 'PUBLIC KEY' },
    curve: new EC('ed25519')
};
var KeyEncoder = require('key-encoder'), keyEncoder = new KeyEncoder(encoderOptions);
class SecurityService {
    static scrypt(password) {
        return crypto.scryptSync(password, 'c7553c09-1ddc-4263-a0bc-f47a3d2297b5', 256);
    }
    static sha256Hash(bytes) {
        return sha256(bytes);
    }
    static derivePath(path, hexSeed) {
        return hd_key_1.derivePath(path, hexSeed);
    }
    static base58Encode(buffer) {
        return base58.encode(buffer);
    }
    static pemEncode(buffer) {
        return keyEncoder.encodePublic(buffer, 'raw', 'pem');
    }
    static base58CheckEncode(text) {
        return base58check.encode(text);
    }
    static base58CheckDecode(text) {
        return base58check.decode(text);
    }
    static ripemd160Hash(text) {
        return new ripemd160().update(text).digest('hex');
    }
    static sha256StringHash(text) {
        return sha256(text);
    }
}
exports.SecurityService = SecurityService;
