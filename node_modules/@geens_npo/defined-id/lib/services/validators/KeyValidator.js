"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyValidator = void 0;
const __1 = require("../..");
class KeyValidator {
    static isDerivePathValid(derivePath) {
        return this.derivePathRegex.test(derivePath);
    }
    static isNaturalNumber(number) {
        return number >= 0 && Math.floor(number) === +number;
    }
    static isEncodeValid(encode) {
        return Object.keys(__1.Encodes).some((key) => __1.Encodes[key] === encode);
    }
    static validateKeyModel(key) {
        const errors = [];
        if (!key.purpose)
            errors.push('Purpose is required');
        if (!key.personaId && key.personaId !== 0)
            errors.push('Persona id is required');
        else if (!KeyValidator.isNaturalNumber(key.personaId))
            errors.push('Persona id is invalid');
        if (key.connectionId && !KeyValidator.isNaturalNumber(key.connectionId))
            errors.push('Connection id is invalid');
        if (!key.publicKey)
            errors.push('Public key is required');
        if (!key.privateKey)
            errors.push('Private key is required');
        return errors;
    }
}
exports.KeyValidator = KeyValidator;
KeyValidator.derivePathRegex = new RegExp("^m(\\/[0-9]+')+$");
