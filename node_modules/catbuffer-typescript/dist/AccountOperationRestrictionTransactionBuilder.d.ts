import { AccountOperationRestrictionTransactionBodyBuilder } from './AccountOperationRestrictionTransactionBodyBuilder';
import { AccountRestrictionFlagsDto } from './AccountRestrictionFlagsDto';
import { AmountDto } from './AmountDto';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { SignatureDto } from './SignatureDto';
import { TimestampDto } from './TimestampDto';
import { TransactionBuilder } from './TransactionBuilder';
export declare class AccountOperationRestrictionTransactionBuilder extends TransactionBuilder {
    accountOperationRestrictionTransactionBody: AccountOperationRestrictionTransactionBodyBuilder;
    constructor(signature: SignatureDto, signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, fee: AmountDto, deadline: TimestampDto, restrictionFlags: AccountRestrictionFlagsDto, restrictionAdditions: number[], restrictionDeletions: number[]);
    static loadFromBinary(payload: Uint8Array): AccountOperationRestrictionTransactionBuilder;
    getRestrictionFlags(): AccountRestrictionFlagsDto;
    getAccountRestrictionTransactionBody_Reserved1(): number;
    getRestrictionAdditions(): number[];
    getRestrictionDeletions(): number[];
    getSize(): number;
    serialize(): Uint8Array;
}
