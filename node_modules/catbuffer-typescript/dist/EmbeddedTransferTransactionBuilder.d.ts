import { EmbeddedTransactionBuilder } from './EmbeddedTransactionBuilder';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { TransferTransactionBodyBuilder } from './TransferTransactionBodyBuilder';
import { UnresolvedAddressDto } from './UnresolvedAddressDto';
import { UnresolvedMosaicBuilder } from './UnresolvedMosaicBuilder';
export declare class EmbeddedTransferTransactionBuilder extends EmbeddedTransactionBuilder {
    transferTransactionBody: TransferTransactionBodyBuilder;
    constructor(signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, recipientAddress: UnresolvedAddressDto, mosaics: UnresolvedMosaicBuilder[], message: Uint8Array);
    static loadFromBinary(payload: Uint8Array): EmbeddedTransferTransactionBuilder;
    getRecipientAddress(): UnresolvedAddressDto;
    getTransferTransactionBody_Reserved1(): number;
    getTransferTransactionBody_Reserved2(): number;
    getMosaics(): UnresolvedMosaicBuilder[];
    getMessage(): Uint8Array;
    getSize(): number;
    serialize(): Uint8Array;
}
