import { AmountDto } from './AmountDto';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { SignatureDto } from './SignatureDto';
import { TimestampDto } from './TimestampDto';
export declare class TransactionBuilder {
    size: number;
    verifiableEntityHeader_Reserved1: number;
    signature: SignatureDto;
    signerPublicKey: KeyDto;
    entityBody_Reserved1: number;
    version: number;
    network: NetworkTypeDto;
    type: EntityTypeDto;
    fee: AmountDto;
    deadline: TimestampDto;
    constructor(signature: SignatureDto, signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, fee: AmountDto, deadline: TimestampDto);
    static loadFromBinary(payload: Uint8Array): TransactionBuilder;
    getVerifiableEntityHeader_Reserved1(): number;
    getSignature(): SignatureDto;
    getSignerPublicKey(): KeyDto;
    getEntityBody_Reserved1(): number;
    getVersion(): number;
    getNetwork(): NetworkTypeDto;
    getType(): EntityTypeDto;
    getFee(): AmountDto;
    getDeadline(): TimestampDto;
    getSize(): number;
    serialize(): Uint8Array;
}
