/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 2.1.0
 *
 * The version of the OpenAPI document: 0.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmbeddedTransactionMetaDTO
 */
export interface EmbeddedTransactionMetaDTO {
    /**
     * Height of the blockchain.
     * @type {string}
     * @memberof EmbeddedTransactionMetaDTO
     */
    height: string;
    /**
     * 
     * @type {string}
     * @memberof EmbeddedTransactionMetaDTO
     */
    aggregateHash: string;
    /**
     * Identifier of the aggregate transaction.
     * @type {string}
     * @memberof EmbeddedTransactionMetaDTO
     */
    aggregateId: string;
    /**
     * Transaction index within the aggregate.
     * @type {number}
     * @memberof EmbeddedTransactionMetaDTO
     */
    index: number;
}

export function EmbeddedTransactionMetaDTOFromJSON(json: any): EmbeddedTransactionMetaDTO {
    return EmbeddedTransactionMetaDTOFromJSONTyped(json, false);
}

export function EmbeddedTransactionMetaDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedTransactionMetaDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'height': json['height'],
        'aggregateHash': json['aggregateHash'],
        'aggregateId': json['aggregateId'],
        'index': json['index'],
    };
}

export function EmbeddedTransactionMetaDTOToJSON(value?: EmbeddedTransactionMetaDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'height': value.height,
        'aggregateHash': value.aggregateHash,
        'aggregateId': value.aggregateId,
        'index': value.index,
    };
}


