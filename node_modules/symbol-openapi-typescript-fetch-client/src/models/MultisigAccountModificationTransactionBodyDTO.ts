/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 2.1.0
 *
 * The version of the OpenAPI document: 0.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MultisigAccountModificationTransactionBodyDTO
 */
export interface MultisigAccountModificationTransactionBodyDTO {
    /**
     * Number of signatures needed to remove a cosignatory.
     * If we are modifying an existing multisig account, this indicates the relative change of the minimum cosignatories.
     * @type {number}
     * @memberof MultisigAccountModificationTransactionBodyDTO
     */
    minRemovalDelta: number;
    /**
     * Number of signatures needed to approve a transaction.
     * If we are modifying an existing multisig account, this indicates the relative change of the minimum cosignatories.
     * @type {number}
     * @memberof MultisigAccountModificationTransactionBodyDTO
     */
    minApprovalDelta: number;
    /**
     * Array of cosignatory accounts to add.
     * @type {Array<string>}
     * @memberof MultisigAccountModificationTransactionBodyDTO
     */
    addressAdditions: Array<string>;
    /**
     * Array of cosignatory accounts to delete.
     * @type {Array<string>}
     * @memberof MultisigAccountModificationTransactionBodyDTO
     */
    addressDeletions: Array<string>;
}

export function MultisigAccountModificationTransactionBodyDTOFromJSON(json: any): MultisigAccountModificationTransactionBodyDTO {
    return MultisigAccountModificationTransactionBodyDTOFromJSONTyped(json, false);
}

export function MultisigAccountModificationTransactionBodyDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultisigAccountModificationTransactionBodyDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'minRemovalDelta': json['minRemovalDelta'],
        'minApprovalDelta': json['minApprovalDelta'],
        'addressAdditions': json['addressAdditions'],
        'addressDeletions': json['addressDeletions'],
    };
}

export function MultisigAccountModificationTransactionBodyDTOToJSON(value?: MultisigAccountModificationTransactionBodyDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'minRemovalDelta': value.minRemovalDelta,
        'minApprovalDelta': value.minApprovalDelta,
        'addressAdditions': value.addressAdditions,
        'addressDeletions': value.addressDeletions,
    };
}


