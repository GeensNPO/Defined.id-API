"use strict";
/* tslint:disable */
/* eslint-disable */
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 2.1.0
 *
 * The version of the OpenAPI document: 0.10.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MosaicNetworkPropertiesDTOToJSON = exports.MosaicNetworkPropertiesDTOFromJSONTyped = exports.MosaicNetworkPropertiesDTOFromJSON = void 0;
const runtime_1 = require("../runtime");
function MosaicNetworkPropertiesDTOFromJSON(json) {
    return MosaicNetworkPropertiesDTOFromJSONTyped(json, false);
}
exports.MosaicNetworkPropertiesDTOFromJSON = MosaicNetworkPropertiesDTOFromJSON;
function MosaicNetworkPropertiesDTOFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'maxMosaicsPerAccount': !runtime_1.exists(json, 'maxMosaicsPerAccount') ? undefined : json['maxMosaicsPerAccount'],
        'maxMosaicDuration': !runtime_1.exists(json, 'maxMosaicDuration') ? undefined : json['maxMosaicDuration'],
        'maxMosaicDivisibility': !runtime_1.exists(json, 'maxMosaicDivisibility') ? undefined : json['maxMosaicDivisibility'],
        'mosaicRentalFeeSinkAddress': !runtime_1.exists(json, 'mosaicRentalFeeSinkAddress') ? undefined : json['mosaicRentalFeeSinkAddress'],
        'mosaicRentalFee': !runtime_1.exists(json, 'mosaicRentalFee') ? undefined : json['mosaicRentalFee'],
    };
}
exports.MosaicNetworkPropertiesDTOFromJSONTyped = MosaicNetworkPropertiesDTOFromJSONTyped;
function MosaicNetworkPropertiesDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'maxMosaicsPerAccount': value.maxMosaicsPerAccount,
        'maxMosaicDuration': value.maxMosaicDuration,
        'maxMosaicDivisibility': value.maxMosaicDivisibility,
        'mosaicRentalFeeSinkAddress': value.mosaicRentalFeeSinkAddress,
        'mosaicRentalFee': value.mosaicRentalFee,
    };
}
exports.MosaicNetworkPropertiesDTOToJSON = MosaicNetworkPropertiesDTOToJSON;
